
echo 'Development setup';
echo '';

setup() {

    cd ${DEV_PATH};

    mysql() {
        if [ -z "${MYSQL_ROOT_PASSWORD}" ]; then
            export MYSQL_ROOT_PASSWORD="`< /dev/urandom LC_CTYPE=C tr -dc _A-Z-a-z-0-9 | head -c${1:-32};echo;`";
            echo 'MYSQL_ROOT_PASSWORD='${MYSQL_ROOT_PASSWORD} >> ${DEV_WORKPATH}/.env;
            echo 'Created a random root password for MySQL stored in '${DEV_WORKPATH}'/.env, to login as root use `dev myroot`';
        fi;


        if [ -z "`${DEV_SUDO} docker volume ls -q -f 'name=dockerdev-mysql-volume'`" ]; then
            echo 'Create a persistant database volume';
            ${DEV_SUDO} docker volume create dockerdev-mysql-volume;
        fi

        echo 'Starting regular database user, waiting for db to become ready';
        ./${DEV_SELF} up db;
        while true; do
            ./${DEV_SELF} logs db 2>&1 | grep 'port: 3306  Percona' > /dev/null && break;
            echo -n '.';
            sleep 1;
        done
        echo '';

        local user=${USER};

        # Check if already exists
        echo "select * from mysql.user where user='${user}';" | dev myroot 2>/dev/null| grep "${user}" >/dev/null && return 1;

        echo 'Database user has access to databases "'${user}'_*"';
        echo '';
        echo "\
create user '${user}';\
grant all on ${user}.* to '${user}';\
update mysql.db set db = '${user}\_%' where user = '${user}';\
flush privileges;" | ./${DEV_SELF} myroot 2>/dev/null;

        return 0;
    }

    workspace() {
        if [ -z "`${DEV_SUDO} docker volume ls -q -f 'name=dockerdev-workspace-volume'`" ]; then
            echo 'Create workspace volume in location '${DEV_WORKSPACE_PATH};
            ${DEV_SUDO} docker volume create -o 'type=none' -o 'device='${DEV_WORKSPACE_PATH} -o 'o=bind' dockerdev-workspace-volume 
        fi
    }

    php() {
        dc php && echo 'PHP configured with version '${DEV_PHP} && return 1;

        local versions="`dc php_versions`" version='';
        echo "Which default PHP version should we enable";
        for v in ${versions}; do
            echo "- ${v}";
        done

        read -p'? ' version;
        [ -z "${version}" ] && return 1;

        touch ${DEV_WORKSPACE_PATH}/.${version};

        return 0;
    }

    suffix() {
        if [ -n "${DOMAINSUFFIX}" ]; then
            echo 'Listening on "*'${DOMAINSUFFIX}'"';
            return 1;
        fi

        local suffix='' default='.localhost';
        echo 'Which domain suffix do you want to listen to - default: '${default}'';
        read -p' ' suffix;
        if [ -z "${suffix}" ]; then
            suffix=${default};
        fi

        echo 'DOMAINSUFFIX='${suffix} >> ${DEV_WORKPATH}/.env;
        export DOMAINSUFFIX=${suffix};

        return 0;
    }


    start() {
        ./${DEV_SELF} up;
    }

    shell() {
        echo 'Add next lines to your shell to implement `cdw`(to workspace) and `dev` to PATH';
        echo '';
        ./${DEV_SELF} profile;
    }

    suffix;
    php;
    mysql;
    start;
    shell;
}
setup;

exit 0;

